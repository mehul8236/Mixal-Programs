* THE PROGRAM IMPLEMENTS THE ALGORITHM TO CREATE AVAILABLE SPACE.
* THE PROGRAM ALSO SHOWS OPERATIONS SUCH AS ADD AND REMOVE ELEMENTS.
* AUTHOR: MEHUL KATPARA
*
* EACH NODE IS MADE OF 1 MIXAL WORD.
*
*	|---|---|---|---|---|
*	|    INFO   |  LINK |
*	|---|---|---|---|---|
*
*	INFO CONTAINS THE DATA
*	LINK IS THE ADDRESS POINTING TO ANOTHER NODE
*
*#####################################################################
*
TERM	EQU	19		TERMINAL DEVICE NUMBER
LINK	EQU	4:5		DEFINE LINK OF WORD
LB	EQU	1990		DEFINE LOWER BOUND LIMIT
*
*	START OF THE PROGRAM
*
	ORIG	2000
*
* 	PNT = PONTER THAT POINTS TO THE TOP NODE 
*
PNT	NOP			
*
*	INITIALZATION OF TOP AND P TO LOWER BOUND
*
	ENT1	LB		SET TOP		<- LB
	ENT2	LB		SET P		<- LB
*
*	SUBROUTINES TO CREATE THE POOL, ADD AND REMOVE ELEMENTS
*
	JMP	CRT		CRATE SUBROUTINE
	JMP	RMVEL		REMOVE ELEMENT SUBROUTINE
	JMP	ADDEL		ADD ELEMENT SUBROUTINE
	JMP	EXIT
*
*	CREATE AVAILABLE SPACE "STORAGE POO"
*	AVAILABLE SPACE = [2000 - TOP] WORDS
*	 
CRT	STJ	1F
LOOP	CMP1	=1999=		IF TOP = 1999, RETURN
	JE	1F
	INC1	1		SET TOP		<- TOP + 1
	ST2	0,1(LINK)	SET TOP(LINK)	<- P
	ST1	PNT		
	LD2	PNT		SET P		<- TOP
	JMP	LOOP		
1H	JMP	*
*
*	THE SUBROUTINE REMOVES A NODE FROM THE POOL
*
RMVEL	STJ	2F
*
*	DEL = ADDRESS OF THE REMOVED NODE
*
DEL	CON	0		
	LD1	PNT		SET TOP		<- PNT 
	LD2	0,1(LINK)	SET P		<- TOP(LINK)	
	J2Z	UNDRFL		IF P = 0 (NULL), JUMP TO UNDERFLOW
	ST1	DEL	
	ST2	PNT		
	LD1	PNT		SET TOP		<- P
2H	JMP	*
*
*	THE SUBROUTINE ADDS AN ELEMENT TO THE POOL
*
ADDEL	STJ	3F
*
*	NEW = ADDRESS OF THE NEW NODE
*
NEW	CON	1999		
	LD1	PNT		SET TOP 	<- PNT
	LD2	NEW		SET P		<- NEW
	ST1	0,2(LINK)	SET P(LINK)	<- TOP
	ST2	PNT
	LD1	PNT		SET TOP		<- P
3H	JMP	*
*
*	DISPLAY UNDERFLOW MESSAGE AND EXIT
*
UNDRFL	OUT	UMSG(TERM)	WRITE MESSAGE OUT TO TERMINAL
UMSG	ALF	"UNDER"
	ALF	" FLOW"
	ALF	". EXI"
	ALF	"TING."
	JMP	EXIT
*
*	END OF THE PROGRAM
*
EXIT	END	2000
